const ImportExportPlugin={name:"importExport",init(){this.instance=this.instance||{},this.instance.exportData=this.exportData.bind(this),this.instance.getExportData=this.getExportData.bind(this),this.instance.exportToExcel=this.exportToExcel.bind(this),this.instance.exportToCSV=this.exportToCSV.bind(this),this.instance.copyToClipboard=this.copyToClipboard.bind(this),this.instance.exportToJSON=this.exportToJSON.bind(this),this.instance.exportToPDF=this.exportToPDF.bind(this),this.instance.exportToXML=this.exportToXML.bind(this),this.instance.exportToHTML=this.exportToHTML.bind(this),this.instance.importData=this.importData.bind(this),this.createImportModal();const o=()=>{if(this.instance.toolbar)return console.log("ImportExportPlugin: Found toolbar in instance"),this.instance.toolbar;if(this.instance.wrapper){var e=this.instance.wrapper.querySelector(".st-toolbar");if(e)return console.log("ImportExportPlugin: Found toolbar in DOM"),e}return null};if(o())console.log("ImportExportPlugin: Using existing toolbar"),this.setupExportUI();else{console.log("ImportExportPlugin: No toolbar found, waiting for one to be created...");const n=new MutationObserver(e=>{for(const t of e)if("childList"===t.type&&t.addedNodes.length)if(o()){console.log("ImportExportPlugin: Toolbar detected, setting up export UI"),this.setupExportUI(),n.disconnect();break}});this.instance.wrapper&&(n.observe(this.instance.wrapper,{childList:!0,subtree:!0}),setTimeout(()=>{o()?(console.log("ImportExportPlugin: Found toolbar after delay"),this.setupExportUI()):console.warn("ImportExportPlugin: Toolbar not found after waiting"),n.disconnect()},1e3))}},createImportModal(){var e,t,o,n,a,s,i,r,l,c,d="importModal";document.getElementById(d)||((e=document.createElement("div")).className="modal fade",e.id=d,e.tabIndex=-1,e.setAttribute("aria-labelledby","importModalLabel"),e.setAttribute("aria-hidden","true"),(d=document.createElement("div")).className="modal-dialog modal-dialog-centered",(t=document.createElement("div")).className="modal-content",(o=document.createElement("div")).className="modal-header",(n=document.createElement("h5")).className="modal-title",n.id="importModalLabel",n.textContent="Import Data",(a=document.createElement("button")).type="button",a.className="btn btn-system ms-auto",a.setAttribute("data-bs-dismiss","modal"),a.setAttribute("aria-label","Close"),a.innerHTML='<svg class="sa-icon sa-icon-2x"><use href="img/sprite.svg#x"></use></svg>',o.appendChild(n),o.appendChild(a),(n=document.createElement("div")).className="modal-body",(a=document.createElement("div")).className="alert d-none mb-3",n.appendChild(a),(s=document.createElement("div")).className="st-dropzone p-5 text-center d-flex flex-column align-items-center border border-2 border-dashed rounded bg-faded",s.innerHTML='<svg class="sa-icon sa-icon-success sa-thin sa-icon-5x mb-2"><use href="img/sprite.svg#upload-cloud"></use></svg><p>Drag and drop your CSV or JSON file here<br>or <b class="text-primary fw-500 cursor-pointer">click to browse</b></p>',(i=document.createElement("input")).type="file",i.className="visually-hidden",i.accept=".csv,.json,.xlsx",s.appendChild(i),n.appendChild(s),(r=document.createElement("div")).className="modal-footer",(l=document.createElement("button")).type="button",l.className="btn btn-danger",l.setAttribute("data-bs-dismiss","modal"),l.textContent="Cancel",(c=document.createElement("button")).type="button",c.className="btn btn-success",c.textContent="Import",c.disabled=!0,r.appendChild(l),r.appendChild(c),t.appendChild(o),t.appendChild(n),t.appendChild(r),d.appendChild(t),e.appendChild(d),document.body.appendChild(e),this.setupImportEventListeners(e,s,i,c,a))},setupImportEventListeners(o,t,e,n,a){t.addEventListener("click",()=>{e.click()}),t.addEventListener("dragover",e=>{e.preventDefault(),t.classList.add("border-primary")}),t.addEventListener("dragleave",()=>{t.classList.remove("border-primary")}),t.addEventListener("drop",e=>{e.preventDefault(),t.classList.remove("border-primary"),e.dataTransfer.files.length&&this.handleFileSelection(e.dataTransfer.files[0],a,n)}),e.addEventListener("change",()=>{e.files.length&&this.handleFileSelection(e.files[0],a,n)}),n.addEventListener("click",()=>{if(console.log("Import button clicked, fileData:",this.fileData),this.fileData){var e,t=bootstrap.Modal.getInstance(o);try{this.importData(this.fileData),t?(console.log("Hiding modal after successful import"),t.hide()):(console.warn("Could not find modal instance, trying to hide directly"),o.classList.remove("show"),o.style.display="none",document.body.classList.remove("modal-open"),(e=document.querySelector(".modal-backdrop"))&&e.remove()),this.fileData=null,n.disabled=!0}catch(e){console.error("Error during import:",e),a.className="alert alert-danger mb-3",a.innerHTML="<strong>Error:</strong> "+e.message}}else console.warn("Import button clicked but no fileData available"),a.className="alert alert-warning mb-3",a.innerHTML="<strong>Warning:</strong> No data to import. Please select a file first."}),o.addEventListener("show.bs.modal",()=>{a.className="alert d-none mb-3",a.textContent="",n.disabled=!0,e.value="",this.fileData=null})},handleFileSelection(a,s,i){console.log("Handling file selection:",a.name),s.className="alert alert-info mb-3",s.textContent="Reading file...",i.disabled=!0;var e=new FileReader;e.onload=e=>{try{var t=a.name.toLowerCase(),o=30<a.name.length?a.name.substring(0,27)+"...":a.name;if(t.endsWith(".json"))this.fileData=JSON.parse(e.target.result),s.className="alert alert-success mb-3",s.innerHTML=`JSON file <b>${o}</b> loaded successfully. Ready to import.`,i.disabled=!1,console.log("JSON file loaded successfully:",o);else if(t.endsWith(".csv"))this.fileData=this.parseCSV(e.target.result),s.className="alert alert-success mb-3",s.innerHTML=`CSV file <b>${o}</b> loaded successfully. Ready to import.`,i.disabled=!1,console.log("CSV file loaded successfully:",o);else if(t.endsWith(".xlsx")){if("undefined"==typeof XLSX)throw new Error("XLSX library is not loaded. Please include SheetJS in your project.");var n=XLSX.read(e.target.result,{type:"array"});this.fileData=XLSX.utils.sheet_to_json(n.Sheets[n.SheetNames[0]]),s.className="alert alert-success mb-3",s.innerHTML=`Excel file <b>${o}</b> loaded successfully. Ready to import.`,i.disabled=!1,console.log("Excel file loaded successfully:",o)}else s.className="alert alert-danger mb-3",s.innerHTML=`Unsupported file format: <b>${o}</b>. Please use CSV, JSON, or Excel.`,console.warn("Unsupported file format:",o)}catch(e){s.className="alert alert-danger mb-3",s.innerHTML=`Error processing file <b>${a.name}</b>: `+e.message,console.error("Error processing file:",e)}},a.name.endsWith(".xlsx")?e.readAsArrayBuffer(a):e.readAsText(a)},parseCSV(e){var t=e.split("\n"),o=t[0].split(",").map(e=>e.trim()),n=[];for(let e=1;e<t.length;e++)if(t[e].trim()){const a=t[e].split(",").map(e=>e.trim()),s={};o.forEach((e,t)=>{s[e]=a[t]}),n.push(s)}return n},importData(t){try{if(console.log("Importing data:",t),this.instance.isImportOperation=!0,this.instance.callHook("beforeDataLoad",t),this.instance.options.loading.enabled&&(this.instance.wrapper.classList.add("st-loading"),this.instance.wrapper.querySelector(".st-loading-spinner")||((o=document.createElement("div")).className="st-loading-spinner",this.instance.wrapper.appendChild(o))),!t)throw new Error("No data provided for import");if(!Array.isArray(t))throw new Error("Data must be an array of objects");if(0===t.length)throw new Error("Data array is empty");return console.log(`Processing ${t.length} rows of imported data`),this.instance.options.data.columns=this.detectColumns(t),this.instance.isTableInitialized?(console.log("Table is initialized, will update existing table"),this.instance.rows=[],this.instance.filteredRows=[],this.instance.originalRows=[],this.instance.currentPage=1):(console.log("Table is not initialized, will create new table"),this.instance.table||(this.instance.table=document.createElement("table"),this.instance.table.className=this.instance.options.classes.table,this.instance.wrapper.appendChild(this.instance.table))),this.instance.options.data.serverSide=!1,this.instance.processData(t),setTimeout(()=>{var e;this.instance.hideLoading?this.instance.hideLoading():(this.instance.wrapper.classList.remove("st-loading"),(e=this.instance.wrapper.querySelector(".st-loading-spinner"))&&e.remove()),this.instance.showNotification&&this.instance.showNotification(`Successfully imported ${t.length} rows`,"success"),console.log("Import completed successfully")},500),this.instance.callHook("onImport",t),!0}catch(e){var o;throw console.error("Import error:",e),this.instance.hideLoading?this.instance.hideLoading():(this.instance.wrapper.classList.remove("st-loading"),(o=this.instance.wrapper.querySelector(".st-loading-spinner"))&&o.remove()),this.instance.showNotification&&this.instance.showNotification("Import failed: "+e.message,"danger"),e}},detectColumns(e){if(!e||!e.length)return[];e=e[0];const o=[];return Object.keys(e).forEach(e=>{let t=e;0<t.length&&(t=t.charAt(0).toUpperCase()+t.slice(1)),/^[A-Z]+$/.test(t)||(t=t.replace(/([a-z])([A-Z])/g,"$1 $2")),o.push({data:e,title:t})}),o},exportData(e){var t=this.getExportData();switch(this.instance.callHook("onExport",e,t),e){case"excel":this.exportToExcel(t);break;case"csv":this.exportToCSV(t);break;case"copy":this.copyToClipboard(t);break;case"pdf":this.exportToPDF(t);break;case"json":this.exportToJSON(t);break;case"xml":this.exportToXML(t);break;case"html":this.exportToHTML(t)}},getExportData(){return{headers:Array.from(this.instance.table.querySelectorAll("thead th")).map(function(e){return e.textContent.trim()}),rows:this.instance.filteredRows.map(function(e){return Array.from(e.element.cells).map(function(e){return e.textContent.trim()})})}},exportToExcel(e){var t=XLSX.utils.book_new(),o=XLSX.utils.aoa_to_sheet([e.headers].concat(e.rows)),e=(o["!cols"]=e.headers.map(function(){return{wch:15}}),XLSX.utils.book_append_sheet(t,o,"Sheet1"),"export_"+(new Date).toISOString().slice(0,19).replace(/[-:]/g,"")+".xlsx");XLSX.writeFile(t,e),this.instance.showNotification("Successfully exported to "+e,"success")},exportToCSV(e){let t="";t+=e.headers.join(",")+"\n",e.rows.forEach(function(e){e=e.map(function(e){return e.includes(",")||e.includes('"')||e.includes("\n")?'"'+e.replace(/"/g,'""')+'"':e});t+=e.join(",")+"\n"});var o,e=(this.instance.table.id||"table-export")+"-"+(new Date).toISOString().slice(0,10)+".csv",n=new Blob([t],{type:"text/csv;charset=utf-8;"});navigator.msSaveBlob?navigator.msSaveBlob(n,e):void 0!==(o=document.createElement("a")).download&&(n=URL.createObjectURL(n),o.setAttribute("href",n),o.setAttribute("download",e),o.style.visibility="hidden",document.body.appendChild(o),o.click(),document.body.removeChild(o),URL.revokeObjectURL(n),this.instance.showNotification("Successfully exported to "+e,"success"))},copyToClipboard(e){let t="";t+=e.headers.join("\t")+"\n",e.rows.forEach(function(e){t+=e.join("\t")+"\n"});e=document.createElement("textarea");e.value=t,e.style.position="fixed",e.style.opacity="0",document.body.appendChild(e);try{e.select(),document.execCommand("copy")?this.instance.showNotification("Copied to clipboard!","success"):this.instance.showNotification("Copy failed. Please try again.","error")}catch(e){this.instance.showNotification("Copy failed: "+e,"error")}finally{document.body.removeChild(e)}},exportToJSON(e){var e=JSON.stringify(e.rows,null,2),e=new Blob([e],{type:"application/json"}),e=URL.createObjectURL(e),t=document.createElement("a");t.href=e,t.download="table-export.json",document.body.appendChild(t),t.click(),document.body.removeChild(t),this.instance.showNotification("Data exported to JSON successfully","success")},exportToPDF(e){try{var t=document.createElement("div"),o=(t.style.position="absolute",t.style.left="-9999px",t.style.top="-9999px",document.body.appendChild(t),document.createElement("table")),n=(o.style.width="100%",o.style.borderCollapse="collapse",document.createElement("thead"));const s=document.createElement("tr"),i=(e.headers.forEach(e=>{var t=document.createElement("th");t.textContent=e,t.style.backgroundColor="#f2f2f2",t.style.border="1px solid #ddd",t.style.padding="8px",t.style.fontWeight="bold",s.appendChild(t)}),n.appendChild(s),o.appendChild(n),document.createElement("tbody"));if(e.rows.forEach(e=>{const o=document.createElement("tr");e.forEach(e=>{var t=document.createElement("td");t.textContent=e,t.style.border="1px solid #ddd",t.style.padding="8px",o.appendChild(t)}),i.appendChild(o)}),o.appendChild(i),t.appendChild(o),"undefined"!=typeof html2pdf)html2pdf().from(o).save("table-export.pdf"),this.instance.showNotification("Data exported to PDF successfully","success");else if("undefined"!=typeof jspdf&&"function"==typeof jspdf.jsPDF){var a=new jspdf.jsPDF;a.autoTable({html:o}),a.save("table-export.pdf"),this.instance.showNotification("Data exported to PDF successfully","success")}else{const r=window.open("","_blank");r.document.write("<html><head><title>Export to PDF</title>"),r.document.write("<style>table { width: 100%; border-collapse: collapse; } th, td { border: 1px solid #ddd; padding: 8px; } th { background-color: #f2f2f2; font-weight: bold; }</style>"),r.document.write("</head><body>"),r.document.write("<p>Please use your browser's print function to save as PDF.</p>"),r.document.write(o.outerHTML),r.document.write("</body></html>"),r.document.close(),setTimeout(()=>{r.print(),r.close()},250),this.instance.showNotification("Please use print dialog to save as PDF","info")}document.body.removeChild(t)}catch(e){console.error("Error exporting to PDF:",e),this.instance.showNotification("Failed to export to PDF: "+e.message,"error")}},exportToXML(o){let n='<?xml version="1.0" encoding="UTF-8"?>\n<table>\n';n+="  <headers>\n",o.headers.forEach(e=>{n+=`    <header>${this.escapeXML(e)}</header>
`}),n+="  </headers>\n  <rows>\n",o.rows.forEach(e=>{n+="    <row>\n",e.forEach((e,t)=>{n+=`      <${o.headers[t].toLowerCase().replace(/\s+/g,"_")}>${this.escapeXML(e)}</${o.headers[t].toLowerCase().replace(/\s+/g,"_")}>
`}),n+="    </row>\n"}),n+="  </rows>\n</table>";var e=new Blob([n],{type:"application/xml"}),e=URL.createObjectURL(e),t=document.createElement("a");t.href=e,t.download="table-export.xml",document.body.appendChild(t),t.click(),document.body.removeChild(t),this.instance.showNotification("Data exported to XML successfully","success")},exportToHTML(e){var e=`
            <!DOCTYPE html>
            <html>
            <head>
                <meta charset="UTF-8">
                <title>Table Export</title>
                <style>
                    table { border-collapse: collapse; width: 100%; margin: 20px 0; }
                    th, td { border: 1px solid #ddd; padding: 8px; text-align: left; }
                    th { background-color: #f2f2f2; }
                    tr:nth-child(even) { background-color: #f9f9f9; }
                    tr:hover { background-color: #f5f5f5; }
                </style>
            </head>
            <body>
                <table>
                    <thead>
                        <tr>
                            ${e.headers.map(e=>`<th>${this.escapeHTML(e)}</th>`).join("")}
                        </tr>
                    </thead>
                    <tbody>
                        ${e.rows.map(e=>`
                            <tr>
                                ${e.map(e=>`<td>${this.escapeHTML(e)}</td>`).join("")}
                            </tr>
                        `).join("")}
                    </tbody>
                </table>
            </body>
            </html>
        `,e=new Blob([e],{type:"text/html"}),e=URL.createObjectURL(e),t=document.createElement("a");t.href=e,t.download="table-export.html",document.body.appendChild(t),t.click(),document.body.removeChild(t),this.instance.showNotification("Data exported to HTML successfully","success")},escapeHTML(e){var t=document.createElement("div");return t.textContent=e,t.innerHTML},escapeXML(e){return e.replace(/[<>&'"]/g,function(e){switch(e){case"<":return"&lt;";case">":return"&gt;";case"&":return"&amp;";case"'":return"&apos;";case'"':return"&quot;"}})},destroy(){var e=document.getElementById("importModal");e&&e.remove(),delete this.instance.exportData,delete this.instance.getExportData,delete this.instance.exportToExcel,delete this.instance.exportToCSV,delete this.instance.copyToClipboard,delete this.instance.exportToJSON,delete this.instance.exportToPDF,delete this.instance.exportToXML,delete this.instance.exportToHTML,delete this.instance.importData},setupExportUI(){var e,t,o;console.log("ImportExportPlugin: Setting up export UI"),this.instance.toolbar&&"true"===this.instance.toolbar.getAttribute("data-initialized")?(e=this.instance.toolbar.querySelector(".col-12.d-flex.justify-content-end")||this.instance.toolbar.querySelector(".col.d-flex.justify-content-end")||this.instance.toolbar.querySelector(".d-flex.justify-content-end")||this.instance.toolbar.querySelector('[class*="justify-content-end"]'))?(console.log("ImportExportPlugin: Export column found, adding buttons"),t={print:e.querySelector('button:has(.sa-printer), button:has(i[class*="printer"])'),import:e.querySelector('button[data-bs-target="#importModal"]'),export:e.querySelector('.dropdown-toggle, button:contains("Export")')},console.log("ImportExportPlugin: Detected print button:",t.print),console.log("ImportExportPlugin: Detected import button:",t.import),console.log("ImportExportPlugin: Detected export button:",t.export),0<(o=e.querySelectorAll('button:has(.sa-printer), button:has(i[class*="printer"]), button.btn-outline-secondary')).length&&(console.log("ImportExportPlugin: Found",o.length,"possible print buttons, skipping print button creation"),t.print=o[0]),this.instance.options.print&&!t.print&&((o=document.createElement("button")).className="btn btn-sm btn-outline-secondary btn-icon h-100 order-1 px-3 fs-xl",o.innerHTML='<i class="sa sa-printer"></i>',o.dataset.role="print-button",o.addEventListener("click",()=>{window.print()}),e.appendChild(o),console.log("ImportExportPlugin: Added print button")),this.instance.options.import&&!t.import&&((o=document.createElement("button")).className="btn btn-sm btn-outline-success d-flex align-items-center gap-1",o.setAttribute("data-bs-toggle","modal"),o.setAttribute("data-bs-target","#importModal"),o.dataset.role="import-button",o.innerHTML='<i class="sa sa-cloud-upload"></i> Import',e.appendChild(o),console.log("ImportExportPlugin: Added import button")),this.instance.options.export&&!t.export&&(this.createExportDropdown(e),console.log("ImportExportPlugin: Added export dropdown"))):console.warn("ImportExportPlugin: Export column not found, cannot add export buttons"):console.warn("ImportExportPlugin: No initialized toolbar found.")},createExportDropdown(e){var t=document.createElement("div"),o=(t.className="btn-group",document.createElement("button"));o.className="btn btn-sm btn-outline-primary dropdown-toggle",o.setAttribute("data-bs-toggle","dropdown"),o.textContent="Export";const n=document.createElement("ul");n.className="dropdown-menu";const a=this;[{format:"excel",label:"Excel"},{format:"csv",label:"CSV"},{format:"copy",label:"Copy"},{format:"pdf",label:"PDF"},{format:"json",label:"JSON"},{format:"xml",label:"XML"},{format:"html",label:"HTML"}].forEach(function(t){var e=document.createElement("li"),o=document.createElement("a");o.className="dropdown-item",o.href="#",o.textContent=t.label,o.addEventListener("click",function(e){e.preventDefault(),a.exportData(t.format)}),e.appendChild(o),n.appendChild(e)}),t.appendChild(o),t.appendChild(n),e.appendChild(t)}};export{ImportExportPlugin};